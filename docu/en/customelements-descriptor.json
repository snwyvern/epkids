{
  "elements": [
    {
      "type": "element",
      "desc": "\nConnects to a simpl4 service, with a websocket start endpoint\n\n    <simpl-websocket id=\"websocket\" namespace=\"docu\" websocket-name=\"ws1\" connected=\"{{connected}}\" \n          recv-message=\"{{recvMessage}}\"> </simpl-websocket>\n\n    attached: function() {\n      var params = { connectionKey: getShortId() };\n      this.$.websocket.openConnection( params, this.socketTimeoutCallback.bind( this ) );\n\n      ...\n\n      this.$.websocket.closeConnection();\n    },\n\n    connectedChanged: function(e) {\n      if( this.connected){\n        this.$.websocket.sendMessage({msg: \"Hello from simpl-websocket\"});\n      }\n    },\n\n    recvMessageChanged: function(e) {\n    },\n\n    socketTimeoutCallback: function( e ) {\n    }\n\n",
      "events": [],
      "properties": [
        {
          "name": "closeConnection",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "connected",
          "type": "Boolean",
          "desc": "\nthe websocket is connected\n\t\t\t\t\t ",
          "published": true,
          "default": false,
          "notify": true,
          "jsdoc": {
            "description": "\nthe websocket is connected\n\t\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t\t * the websocket is connected\n\t\t\t\t\t "
          }
        },
        {
          "name": "namespace",
          "type": "String",
          "published": true
        },
        {
          "name": "openConnection",
          "type": "Function",
          "desc": "\nparams: { connectionKey : 'KEY' }\n\nthe connectionKey can here overriden, otherwise a default key is generated\n\ntimeoutCallback : function is called , if a timeout occurs\n\t\t\t\t ",
          "params": [
            {
              "name": "params"
            },
            {
              "name": "timeoutCallback"
            }
          ],
          "jsdoc": {
            "description": "\nparams: { connectionKey : 'KEY' }\n\nthe connectionKey can here overriden, otherwise a default key is generated\n\ntimeoutCallback : function is called , if a timeout occurs\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * params: { connectionKey : 'KEY' }\n\n\t\t\t\t * the connectionKey can here overriden, otherwise a default key is generated\n\n\t\t\t\t * timeoutCallback : function is called , if a timeout occurs\n\t\t\t\t "
          },
          "function": true
        },
        {
          "name": "osgiService",
          "type": "String",
          "desc": "\nis for future  use\n\t\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nis for future  use\n\t\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t\t * is for future  use\n\t\t\t\t\t "
          }
        },
        {
          "name": "recvMessage",
          "type": "Object",
          "desc": "\ncontains the received message, a json object\n\t\t\t\t\t ",
          "published": true,
          "notify": true,
          "jsdoc": {
            "description": "\ncontains the received message, a json object\n\t\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t\t * contains the received message, a json object\n\t\t\t\t\t "
          }
        },
        {
          "name": "sendMessage",
          "type": "Function",
          "desc": "\nsend a message, data is a json object\n\t\t\t\t ",
          "params": [
            {
              "name": "data"
            }
          ],
          "jsdoc": {
            "description": "\nsend a message, data is a json object\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * send a message, data is a json object\n\t\t\t\t "
          },
          "function": true
        },
        {
          "name": "websocketName",
          "type": "String",
          "desc": "\nthe websocketName is specified in the service definition\n\t\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nthe websocketName is specified in the service definition\n\t\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t\t * the websocketName is specified in the service definition\n\t\t\t\t\t "
          }
        }
      ],
      "behaviors": [],
      "observers": [],
      "is": "simpl-websocket",
      "contentHref": "src/simpl-websocket/simpl-websocket.html",
      "jsdoc": {
        "description": "\nConnects to a simpl4 service, with a websocket start endpoint\n\n    <simpl-websocket id=\"websocket\" namespace=\"docu\" websocket-name=\"ws1\" connected=\"{{connected}}\" \n          recv-message=\"{{recvMessage}}\"> </simpl-websocket>\n\n    attached: function() {\n      var params = { connectionKey: getShortId() };\n      this.$.websocket.openConnection( params, this.socketTimeoutCallback.bind( this ) );\n\n      ...\n\n      this.$.websocket.closeConnection();\n    },\n\n    connectedChanged: function(e) {\n      if( this.connected){\n        this.$.websocket.sendMessage({msg: \"Hello from simpl-websocket\"});\n      }\n    },\n\n    recvMessageChanged: function(e) {\n    },\n\n    socketTimeoutCallback: function( e ) {\n    }\n\n",
        "tags": [],
        "orig": "\nConnects to a simpl4 service, with a websocket start endpoint\n\n    <simpl-websocket id=\"websocket\" namespace=\"docu\" websocket-name=\"ws1\" connected=\"{{connected}}\" \n          recv-message=\"{{recvMessage}}\"> </simpl-websocket>\n\n    attached: function() {\n      var params = { connectionKey: getShortId() };\n      this.$.websocket.openConnection( params, this.socketTimeoutCallback.bind( this ) );\n\n      ...\n\n      this.$.websocket.closeConnection();\n    },\n\n    connectedChanged: function(e) {\n      if( this.connected){\n        this.$.websocket.sendMessage({msg: \"Hello from simpl-websocket\"});\n      }\n    },\n\n    recvMessageChanged: function(e) {\n    },\n\n    socketTimeoutCallback: function( e ) {\n    }\n\n"
      },
      "demos": [],
      "show": true
    },
    {
      "type": "element",
      "desc": "\nsimple possiblity to invoke any service\n\n    <simpl-rpc method=\"docu.getFriends\" service=\"simpl4\" params=\"{}\" \n        response=\"{{friends}}\"></simpl-rpc> \n\n     <table>\n        <template is=\"dom-repeat\"  items=\"[[friends]]\">\n          <tr>\n            <td>[[item.surname]]</td>\n            <td>[[item.firstname]]</td>\n            <td>[[item.gender]]</td>\n            <td>[[item.phone]]</td>\n          </tr>\n        </template>\n      </table>\n\n",
      "events": [
        {
          "desc": "\nFired if the call complete\n\n",
          "jsdoc": {
            "description": "\nFired if the call complete\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "complete"
              }
            ],
            "orig": "*\n\t\t\t * Fired if the call complete\n\t\t\t *\n\t\t\t * @event complete\n\t\t\t "
          },
          "name": "complete",
          "params": []
        },
        {
          "desc": "\nFired if an error occured\n\n",
          "jsdoc": {
            "description": "\nFired if an error occured\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "error"
              }
            ],
            "orig": "*\n\t\t\t * Fired if an error occured\n\t\t\t *\n\t\t\t * @event error\n\t\t\t "
          },
          "name": "error",
          "params": []
        }
      ],
      "properties": [
        {
          "name": "go",
          "type": "Function",
          "desc": "\nManual execute the rpc call.\n\t\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\nManual execute the rpc call.\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * Manual execute the rpc call.\n\t\t\t "
          },
          "function": true
        },
        {
          "name": "method",
          "type": "String",
          "desc": "\nThe methodname  defined in the service editor\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nThe methodname  defined in the service editor\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * The methodname  defined in the service editor\n\t\t\t\t "
          }
        },
        {
          "name": "noauto",
          "type": "Boolean",
          "desc": "\nexecute not automatically\n\t\t\t\t ",
          "published": true,
          "default": false,
          "jsdoc": {
            "description": "\nexecute not automatically\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * execute not automatically\n\t\t\t\t "
          }
        },
        {
          "name": "params",
          "type": "Object",
          "desc": "\nThe service parameter Object, can be expressed as JSON.\n\t\t\t\t ",
          "published": true,
          "default": null,
          "jsdoc": {
            "description": "\nThe service parameter Object, can be expressed as JSON.\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * The service parameter Object, can be expressed as JSON.\n\t\t\t\t "
          }
        },
        {
          "name": "response",
          "type": "Object",
          "desc": "\nThe response object\n\t\t\t\t ",
          "published": true,
          "notify": true,
          "jsdoc": {
            "description": "\nThe response object\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * The response object\n\t\t\t\t "
          }
        },
        {
          "name": "service",
          "type": "String",
          "desc": "\nsimpl4 is almost ok.\n\t\t\t\t ",
          "published": true,
          "default": "simpl4",
          "jsdoc": {
            "description": "\nsimpl4 is almost ok.\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * simpl4 is almost ok.\n\t\t\t\t "
          }
        },
        {
          "name": "_allparams",
          "type": "Object",
          "published": true,
          "private": true
        },
        {
          "name": "_collectAll",
          "type": "Function",
          "desc": "\nFired if the call complete\n\n",
          "params": [],
          "jsdoc": {
            "description": "\nFired if the call complete\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "complete"
              }
            ],
            "orig": "*\n\t\t\t * Fired if the call complete\n\t\t\t *\n\t\t\t * @event complete\n\t\t\t "
          },
          "private": true,
          "function": true
        },
        {
          "name": "_complete",
          "type": "Function",
          "params": [
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_error",
          "type": "Function",
          "params": [
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_error2",
          "type": "Function",
          "params": [
            {
              "name": "error"
            },
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_evalResponse",
          "type": "Function",
          "params": [
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_getId",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_isSuccess",
          "type": "Function",
          "params": [
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_processResponse",
          "type": "Function",
          "params": [
            {
              "name": "result"
            },
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_receive",
          "type": "Function",
          "params": [
            {
              "name": "response"
            },
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "ready",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [],
      "observers": [],
      "is": "simpl-rpc",
      "contentHref": "src/simpl-rpc/simpl-rpc.html",
      "jsdoc": {
        "description": "\nsimple possiblity to invoke any service\n\n    <simpl-rpc method=\"docu.getFriends\" service=\"simpl4\" params=\"{}\" \n        response=\"{{friends}}\"></simpl-rpc> \n\n     <table>\n        <template is=\"dom-repeat\"  items=\"[[friends]]\">\n          <tr>\n            <td>[[item.surname]]</td>\n            <td>[[item.firstname]]</td>\n            <td>[[item.gender]]</td>\n            <td>[[item.phone]]</td>\n          </tr>\n        </template>\n      </table>\n\n",
        "tags": [],
        "orig": "\nsimple possiblity to invoke any service\n\n    <simpl-rpc method=\"docu.getFriends\" service=\"simpl4\" params=\"{}\" \n        response=\"{{friends}}\"></simpl-rpc> \n\n     <table>\n        <template is=\"dom-repeat\"  items=\"[[friends]]\">\n          <tr>\n            <td>[[item.surname]]</td>\n            <td>[[item.firstname]]</td>\n            <td>[[item.gender]]</td>\n            <td>[[item.phone]]</td>\n          </tr>\n        </template>\n      </table>\n\n"
      },
      "demos": [],
      "show": true
    },
    {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [
        {
          "name": "xaction",
          "type": "String",
          "published": true
        },
        {
          "name": "xid",
          "type": "String",
          "published": true
        }
      ],
      "behaviors": [
        "Polymer.PaperButtonBehavior"
      ],
      "observers": [],
      "is": "xaction-button",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [],
      "behaviors": [],
      "observers": [],
      "is": "simpl-group",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [],
      "behaviors": [],
      "observers": [],
      "is": "simpl-row",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [
        {
          "name": "getGridField",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "getValue",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isActionButton",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isAlert",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isCustom",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isEnumSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isField",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isForm",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGridInput",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGroup",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndNotBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isModuleSelector",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isPage",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRelatedTo",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRow",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTableSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTabView",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTextArea",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isUpload",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "item",
          "type": "Object",
          "published": true,
          "observer": "itemChanged",
          "observerNode": {
            "type": "Literal",
            "start": 90,
            "end": 103,
            "loc": {
              "start": {
                "line": 6,
                "column": 15
              },
              "end": {
                "line": 6,
                "column": 28
              }
            },
            "range": [
              90,
              103
            ],
            "value": "itemChanged",
            "raw": "\"itemChanged\""
          }
        },
        {
          "name": "itemChanged",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "setValue",
          "type": "Function",
          "params": [
            {
              "name": "v"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "tabTitle",
          "type": "Function",
          "params": [
            {
              "name": "t"
            }
          ],
          "function": true
        },
        {
          "name": "_getGridField",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "FormElementSelectorBehavior"
      ],
      "observers": [],
      "is": "grid-element-renderer",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [
        {
          "name": "getActionButtonClasses",
          "type": "Function",
          "params": [
            {
              "name": "action"
            }
          ],
          "function": true
        },
        {
          "name": "getActionButtonColor",
          "type": "Function",
          "params": [
            {
              "name": "action"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isActionButton",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isAlert",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isCustom",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isEnumSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isField",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isForm",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGridInput",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGroup",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndNotBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isModuleSelector",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isPage",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRelatedTo",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRow",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTableSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTabView",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTextArea",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isUpload",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "item",
          "type": "Object",
          "published": true,
          "observer": "itemChanged",
          "observerNode": {
            "type": "Literal",
            "start": 90,
            "end": 103,
            "loc": {
              "start": {
                "line": 6,
                "column": 15
              },
              "end": {
                "line": 6,
                "column": 28
              }
            },
            "range": [
              90,
              103
            ],
            "value": "itemChanged",
            "raw": "\"itemChanged\""
          }
        },
        {
          "name": "itemChanged",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "tabTitle",
          "type": "Function",
          "params": [
            {
              "name": "t"
            }
          ],
          "function": true
        },
        {
          "name": "_internalXAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "FormElementSelectorBehavior"
      ],
      "observers": [],
      "is": "form-element-renderer",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [
        {
          "name": "computePagesStyle",
          "type": "Function",
          "params": [
            {
              "name": "item"
            }
          ],
          "function": true
        },
        {
          "name": "getElementStyle",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "getPageStyle",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isActionButton",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isAlert",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isCustom",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isEnumSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isField",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isForm",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGridInput",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGroup",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndNotBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isModuleSelector",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isPage",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRelatedTo",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRow",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTableSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTabView",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTextArea",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isUpload",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "item",
          "type": "Object",
          "published": true
        },
        {
          "name": "pagesStyle",
          "type": "Object",
          "published": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "tabTitle",
          "type": "Function",
          "params": [
            {
              "name": "t"
            }
          ],
          "function": true
        },
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "FormElementSelectorBehavior"
      ],
      "observers": [
        {
          "javascriptNode": {
            "type": "Literal",
            "start": 241,
            "end": 262,
            "loc": {
              "start": {
                "line": 16,
                "column": 4
              },
              "end": {
                "line": 16,
                "column": 25
              }
            },
            "range": [
              241,
              262
            ],
            "value": "routeChanged(route)",
            "raw": "'routeChanged(route)'"
          },
          "expression": "routeChanged(route)"
        }
      ],
      "is": "form-tab-renderer",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isActionButton",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isAlert",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isCustom",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isEnumSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isField",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isForm",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGridInput",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGroup",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndNotBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isModuleSelector",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isPage",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRelatedTo",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRow",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTableSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTabView",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTextArea",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isUpload",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "items",
          "type": "Object",
          "published": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "tabTitle",
          "type": "Function",
          "params": [
            {
              "name": "t"
            }
          ],
          "function": true
        },
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "FormElementSelectorBehavior"
      ],
      "observers": [],
      "is": "form-element-selector",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [
        {
          "desc": "\nFired if a button pressed which the configured action\n\n",
          "jsdoc": {
            "description": "\nFired if a button pressed which the configured action\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "xaction"
              }
            ],
            "orig": "*\n\t\t\t * Fired if a button pressed which the configured action\n\t\t\t *\n\t\t\t * @event xaction\n\t\t\t "
          },
          "name": "xaction",
          "params": []
        }
      ],
      "properties": [
        {
          "__fromBehavior": "FormBehavior",
          "name": "clearData",
          "type": "Function",
          "desc": "\nclear the form data \n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\nclear the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * clear the form data \n\t\t "
          },
          "function": true
        },
        {
          "name": "data",
          "type": "Object",
          "desc": "\nthe form data\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nthe form data\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * the form data\n\t\t\t\t "
          }
        },
        {
          "name": "enterAction",
          "type": "String",
          "desc": "\nthe triggered action, if null the action configured in the buttons is used\n\t\t\t\t ",
          "published": true,
          "default": null,
          "jsdoc": {
            "description": "\nthe triggered action, if null the action configured in the buttons is used\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * the triggered action, if null the action configured in the buttons is used\n\t\t\t\t "
          }
        },
        {
          "name": "enterDisabled",
          "type": "Boolean",
          "desc": "\ndisable the enterButton\n\t\t\t\t ",
          "published": true,
          "default": false,
          "jsdoc": {
            "description": "\ndisable the enterButton\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * disable the enterButton\n\t\t\t\t "
          }
        },
        {
          "name": "formName",
          "type": "String",
          "desc": "\nthe form name, or the path to the form file\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nthe form name, or the path to the form file\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * the form name, or the path to the form file\n\t\t\t\t "
          }
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "getData",
          "type": "Function",
          "desc": "\nget the form data \n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\nget the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * get the form data \n\t\t "
          },
          "function": true
        },
        {
          "name": "keyBindings",
          "type": "Object"
        },
        {
          "name": "mode",
          "type": "String",
          "desc": "\ncan be any string, maybe set to \"add\" or \"edit\", is passed  to service calls\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\ncan be any string, maybe set to \"add\" or \"edit\", is passed  to service calls\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * can be any string, maybe set to \"add\" or \"edit\", is passed  to service calls\n\t\t\t\t "
          }
        },
        {
          "name": "namespace",
          "type": "String",
          "desc": "\nthe namespace in which the form lives\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nthe namespace in which the form lives\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * the namespace in which the form lives\n\t\t\t\t "
          }
        },
        {
          "name": "saveDisabled",
          "type": "Boolean",
          "desc": "\nindicates whether saving is allowed,externally you   might do some things\n\t\t\t\t ",
          "published": true,
          "default": false,
          "notify": true,
          "jsdoc": {
            "description": "\nindicates whether saving is allowed,externally you   might do some things\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * indicates whether saving is allowed,externally you   might do some things\n\t\t\t\t "
          }
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "setData",
          "type": "Function",
          "desc": "\nset the form data \n\t\t ",
          "params": [
            {
              "name": "data"
            }
          ],
          "jsdoc": {
            "description": "\nset the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * set the form data \n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "setItems",
          "type": "Function",
          "desc": "\nnot really  public , should only be used if you know what you are doing\n\t\t ",
          "params": [
            {
              "name": "items"
            }
          ],
          "jsdoc": {
            "description": "\nnot really  public , should only be used if you know what you are doing\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * not really  public , should only be used if you know what you are doing\n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "TranslationsBehavior",
          "name": "tr",
          "type": "Function",
          "params": [
            {
              "name": "m"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "updateData",
          "type": "Function",
          "desc": "\nupdate the form data \n\t\t ",
          "params": [
            {
              "name": "data"
            }
          ],
          "jsdoc": {
            "description": "\nupdate the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * update the form data \n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "validate",
          "type": "Function",
          "desc": "\nvalidate the form data \n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\nvalidate the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * validate the form data \n\t\t "
          },
          "function": true
        },
        {
          "name": "variables",
          "type": "Object",
          "published": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "__dataChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "__formNameChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "__isSaveDisabled",
          "type": "Function",
          "params": [
            {
              "name": "sd"
            },
            {
              "name": "item"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_buildShapeMap",
          "type": "Function",
          "params": [
            {
              "name": "shape"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_cleanShape",
          "type": "Function",
          "params": [
            {
              "name": "shape"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_constraintParams",
          "type": "Object",
          "private": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_constructRegulaConstraints",
          "type": "Function",
          "params": [
            {
              "name": "constraints"
            },
            {
              "name": "msg"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_convertType",
          "type": "Function",
          "params": [
            {
              "name": "t"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_correctRegex",
          "type": "Function",
          "params": [
            {
              "name": "r"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_dataChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_doParameterMapping",
          "type": "Function",
          "params": [
            {
              "name": "parammapping"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_doPreProcess",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_doResultMapping",
          "type": "Function",
          "params": [
            {
              "name": "items"
            },
            {
              "name": "resultmapping"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_enterPressed",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_expandString",
          "type": "Function",
          "params": [
            {
              "name": "str"
            },
            {
              "name": "binding"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_filterToArray",
          "type": "Function",
          "params": [
            {
              "name": "nodeList"
            },
            {
              "name": "all"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_formNameChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_getButtonLabel",
          "type": "Function",
          "params": [
            {
              "name": "l"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_getData",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_getField",
          "type": "Function",
          "params": [
            {
              "name": "path"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_getLabel",
          "type": "Function",
          "params": [
            {
              "name": "path"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_getLabelShape",
          "type": "Function",
          "params": [
            {
              "name": "childs"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_getSelectionLists",
          "type": "Function",
          "params": [
            {
              "name": "method"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_internalXAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_isEmpty",
          "type": "Function",
          "params": [
            {
              "name": "s"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_isLineBreak",
          "type": "Function",
          "params": [
            {
              "name": "child"
            },
            {
              "name": "next"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_isNotEmpty",
          "type": "Function",
          "params": [
            {
              "name": "s"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_isSaveDisabled",
          "type": "Function",
          "params": [
            {
              "name": "env"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_mapKeys",
          "type": "Function",
          "params": [
            {
              "name": "key"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_maskedEval",
          "type": "Function",
          "params": [
            {
              "name": "scr"
            },
            {
              "name": "env"
            },
            {
              "name": "def"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_postProcessLocal",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_postProcessService",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_prepareShape",
          "type": "Function",
          "params": [
            {
              "name": "shape"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_preProcessLocal",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_preProcessService",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_removeExtension",
          "type": "Function",
          "params": [
            {
              "name": "s"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_setData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_setFieldData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_setGlobalErrorMessage",
          "type": "Function",
          "params": [
            {
              "name": "msg"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_setItems",
          "type": "Function",
          "params": [
            {
              "name": "items"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_shapesChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_specChanged",
          "type": "Function",
          "desc": "----------------------------------",
          "params": [],
          "jsdoc": {
            "description": "----------------------------------",
            "tags": [],
            "orig": "----------------------------------"
          },
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_toMap",
          "type": "Function",
          "params": [
            {
              "name": "arr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_validateLocal",
          "type": "Function",
          "params": [
            {
              "name": "errorListGlobal"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_valueChanged",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_whenFieldsReady",
          "type": "Function",
          "params": [
            {
              "name": "done"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        },
        {
          "__fromBehavior": "TranslationsBehavior",
          "name": "created",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        },
        {
          "name": "listeners",
          "type": "Object",
          "private": true,
          "configuration": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "ready",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "Polymer.IronA11yKeysBehavior",
        "FormBehavior",
        "TranslationsBehavior"
      ],
      "observers": [
        {
          "javascriptNode": {
            "type": "Literal",
            "start": 1194,
            "end": 1216,
            "loc": {
              "start": {
                "line": 66,
                "column": 4
              },
              "end": {
                "line": 66,
                "column": 26
              }
            },
            "range": [
              1194,
              1216
            ],
            "value": "_dataChanged(data.*)",
            "raw": "'_dataChanged(data.*)'"
          },
          "expression": "_dataChanged(data.*)"
        },
        {
          "javascriptNode": {
            "type": "Literal",
            "start": 1222,
            "end": 1244,
            "loc": {
              "start": {
                "line": 67,
                "column": 4
              },
              "end": {
                "line": 67,
                "column": 26
              }
            },
            "range": [
              1222,
              1244
            ],
            "value": "_specChanged(spec.*)",
            "raw": "'_specChanged(spec.*)'"
          },
          "expression": "_specChanged(spec.*)"
        },
        {
          "javascriptNode": {
            "type": "Literal",
            "start": 1250,
            "end": 1278,
            "loc": {
              "start": {
                "line": 68,
                "column": 4
              },
              "end": {
                "line": 68,
                "column": 32
              }
            },
            "range": [
              1250,
              1278
            ],
            "value": "_formNameChanged(formName)",
            "raw": "'_formNameChanged(formName)'"
          },
          "expression": "_formNameChanged(formName)"
        }
      ],
      "is": "simpl-form",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": true
    },
    {
      "type": "element",
      "desc": "\nsimple possiblity to invoke any service\n\n     <simpl-rpc id=\"rpcListId\" method=\"docu.dataaccess\" params=\"{operation:'list'}\" response=\"{{dataList}}\"></simpl-rpc>\n     <simpl-datatables options='{paging: true,\"dom\":\"frt\",scrollY:\"200px\"}' \n            on-rows-selected=\"tableRowSelected\" data=\"[[dataList]]\" />\n\n",
      "events": [
        {
          "__fromBehavior": "DataTablesBehavior",
          "desc": "\nfire if the datatables table is complete\n\n",
          "jsdoc": {
            "description": "\nfire if the datatables table is complete\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "init-complete"
              }
            ],
            "orig": "*\n\t\t * fire if the datatables table is complete\n\t\t *\n\t\t * @event init-complete\n\t\t "
          },
          "name": "init-complete",
          "params": []
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "desc": "\nfire if rows are selected\n\n",
          "jsdoc": {
            "description": "\nfire if rows are selected\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "rows-selected"
              }
            ],
            "orig": "*\n\t\t * fire if rows are selected\n\t\t *\n\t\t * @event rows-selected\n\t\t "
          },
          "name": "rows-selected",
          "params": []
        }
      ],
      "properties": [
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "data",
          "type": "Object",
          "desc": "\nthe data\n\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nthe data\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * the data\n\t\t\t "
          }
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "getApi",
          "type": "Function",
          "desc": "\n get the datatables api\n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\n get the datatables api\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t *  get the datatables api\n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "getSelection",
          "type": "Function",
          "desc": "\n get the selected rows\n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\n get the selected rows\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t *  get the selected rows\n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "meta",
          "type": "Object",
          "desc": "\ncolumn definition, if null, the column definition is taken from the data <br/>\n\t\t\t\tcan be a also json string <br/>\n\t\t\t\t[ {data:'firstname', title:'@translation.firstname'},  <br/>&nbsp; {data:'surname', title:'@translation.surname'} ]<br/>\n\t\t\t\tif the first char in \"title\" is  \"@\", then title.substring(1) will be translated\n\t\t\t\t\n\t\t\t ",
          "published": true,
          "default": null,
          "jsdoc": {
            "description": "\ncolumn definition, if null, the column definition is taken from the data <br/>\n\t\t\t\tcan be a also json string <br/>\n\t\t\t\t[ {data:'firstname', title:'@translation.firstname'},  <br/>&nbsp; {data:'surname', title:'@translation.surname'} ]<br/>\n\t\t\t\tif the first char in \"title\" is  \"@\", then title.substring(1) will be translated\n\t\t\t\t\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * column definition, if null, the column definition is taken from the data <br/>\n\t\t\t\tcan be a also json string <br/>\n\t\t\t\t[ {data:'firstname', title:'@translation.firstname'},  <br/>&nbsp; {data:'surname', title:'@translation.surname'} ]<br/>\n\t\t\t\tif the first char in \"title\" is  \"@\", then title.substring(1) will be translated\n\t\t\t\t\n\t\t\t "
          }
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "multiSelect",
          "type": "Boolean",
          "desc": "\nmore than one row can be selected\n\t\t\t ",
          "published": true,
          "default": false,
          "jsdoc": {
            "description": "\nmore than one row can be selected\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * more than one row can be selected\n\t\t\t "
          }
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "namespace",
          "type": "String",
          "desc": "\nthe namespace\n\t\t\t ",
          "published": true,
          "default": null,
          "jsdoc": {
            "description": "\nthe namespace\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * the namespace\n\t\t\t "
          }
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "options",
          "type": "String",
          "desc": "\n<b>datatables options</b><br/>\ndom<br/>\nl - length changing input control <br/>\nf - filtering input<br/>\nt - The table!<br/>\ni - Table information summary<br/>\np - pagination control<br/>\nr - processing display element<br/>\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\n<b>datatables options</b><br/>\ndom<br/>\nl - length changing input control <br/>\nf - filtering input<br/>\nt - The table!<br/>\ni - Table information summary<br/>\np - pagination control<br/>\nr - processing display element<br/>\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * <b>datatables options</b><br/>\ndom<br/>\nl - length changing input control <br/>\nf - filtering input<br/>\nt - The table!<br/>\ni - Table information summary<br/>\np - pagination control<br/>\nr - processing display element<br/>\n\t\t\t\t "
          }
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "recalc",
          "type": "Function",
          "desc": "\n recalc and redraw the table\n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\n recalc and redraw the table\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t *  recalc and redraw the table\n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "selection",
          "type": "Array",
          "desc": "\nThe selected rows\n\t\t\t ",
          "published": true,
          "notify": true,
          "jsdoc": {
            "description": "\nThe selected rows\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * The selected rows\n\t\t\t "
          }
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "unselectAll",
          "type": "Function",
          "desc": "\n unselect all rows\n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\n unselect all rows\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t *  unselect all rows\n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "__createTable",
          "type": "Function",
          "params": [
            {
              "name": "dtMeta"
            },
            {
              "name": "dataSet"
            },
            {
              "name": "options"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "__dataChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_addDetailCopier",
          "type": "Function",
          "params": [
            {
              "name": "mainElem"
            },
            {
              "name": "api"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_copySelection",
          "type": "Function",
          "params": [
            {
              "name": "sel"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_createRowListener",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_createTable",
          "type": "Function",
          "params": [
            {
              "name": "dtMeta"
            },
            {
              "name": "dataSet"
            },
            {
              "name": "options"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_dataChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_getIndex",
          "type": "Function",
          "params": [
            {
              "name": "target"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_getLang",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_parseOptions",
          "type": "Function",
          "params": [
            {
              "name": "o"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_prepareMeta",
          "type": "Function",
          "params": [
            {
              "name": "meta"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_prepareMetaFromData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_tapAction",
          "type": "Function",
          "params": [
            {
              "name": "target"
            },
            {
              "name": "index"
            },
            {
              "name": "row"
            },
            {
              "name": "doubleTap"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_tapActionMulti",
          "type": "Function",
          "params": [
            {
              "name": "target"
            },
            {
              "name": "index"
            },
            {
              "name": "row"
            },
            {
              "name": "doubleTap"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_tapActionSingle",
          "type": "Function",
          "params": [
            {
              "name": "target"
            },
            {
              "name": "index"
            },
            {
              "name": "row"
            },
            {
              "name": "doubleTap"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_translate",
          "type": "Function",
          "params": [
            {
              "name": "meta"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_whenTableReady",
          "type": "Function",
          "params": [
            {
              "name": "done"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "ModernizrBehavior",
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "ModernizrBehavior",
        "DataTablesBehavior"
      ],
      "observers": [],
      "is": "simpl-datatables",
      "contentHref": "src/simpl-datatables/simpl-datatables.html",
      "jsdoc": {
        "description": "\nsimple possiblity to invoke any service\n\n     <simpl-rpc id=\"rpcListId\" method=\"docu.dataaccess\" params=\"{operation:'list'}\" response=\"{{dataList}}\"></simpl-rpc>\n     <simpl-datatables options='{paging: true,\"dom\":\"frt\",scrollY:\"200px\"}' \n            on-rows-selected=\"tableRowSelected\" data=\"[[dataList]]\" />\n\n",
        "tags": [],
        "orig": "\nsimple possiblity to invoke any service\n\n     <simpl-rpc id=\"rpcListId\" method=\"docu.dataaccess\" params=\"{operation:'list'}\" response=\"{{dataList}}\"></simpl-rpc>\n     <simpl-datatables options='{paging: true,\"dom\":\"frt\",scrollY:\"200px\"}' \n            on-rows-selected=\"tableRowSelected\" data=\"[[dataList]]\" />\n\n"
      },
      "demos": [],
      "show": true
    },
    {
      "type": "element",
      "desc": "\nCRUD operations for simpl4\n",
      "events": [],
      "properties": [
        {
          "name": "addAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "alert",
          "type": "Function",
          "params": [
            {
              "name": "message"
            }
          ],
          "function": true
        },
        {
          "name": "boundKeys",
          "type": "Array",
          "published": true,
          "default": "UNKNOWN"
        },
        {
          "name": "buttonList",
          "type": "String",
          "published": true,
          "default": "add,edit,copy,detail"
        },
        {
          "name": "buttonListDetail",
          "type": "String",
          "published": true,
          "default": "add,edit,copy"
        },
        {
          "name": "cancelAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "copyAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "delAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "deleteData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "function": true
        },
        {
          "name": "detailAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "editAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "entity",
          "type": "String",
          "published": true
        },
        {
          "name": "filterName",
          "type": "String",
          "published": true,
          "default": null
        },
        {
          "name": "getData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "function": true
        },
        {
          "name": "getEditMode",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "getFormData",
          "type": "Function",
          "params": [
            {
              "name": "dataDesc"
            }
          ],
          "function": true
        },
        {
          "name": "getFormSpec",
          "type": "Function",
          "params": [
            {
              "name": "item"
            }
          ],
          "function": true
        },
        {
          "name": "getIdValue",
          "type": "Function",
          "params": [
            {
              "name": "entityName"
            },
            {
              "name": "namespace"
            },
            {
              "name": "data"
            }
          ],
          "function": true
        },
        {
          "name": "getPack",
          "type": "Function",
          "params": [
            {
              "name": "en"
            }
          ],
          "function": true
        },
        {
          "name": "handlePrevNextButtons",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "isForm",
          "type": "Function",
          "params": [
            {
              "name": "item"
            }
          ],
          "function": true
        },
        {
          "name": "isTable",
          "type": "Function",
          "params": [
            {
              "name": "item"
            }
          ],
          "function": true
        },
        {
          "name": "keyBindings",
          "type": "Object"
        },
        {
          "name": "keyEventTarget",
          "type": "Object",
          "published": true,
          "default": "UNKNOWN"
        },
        {
          "name": "loadBeforeEdit",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "namespace",
          "type": "String",
          "published": true
        },
        {
          "name": "nextAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "noCarriageReturn",
          "type": "Boolean",
          "published": true,
          "default": false
        },
        {
          "name": "onDeleteOk",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "onError",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "pageSelected",
          "type": "Number",
          "published": true,
          "default": 0
        },
        {
          "name": "pressed",
          "type": "String",
          "published": true,
          "readOnly": true,
          "default": ""
        },
        {
          "name": "prevAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "preventDefault",
          "type": "Boolean",
          "published": true,
          "default": true,
          "notify": true
        },
        {
          "name": "refreshAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "saveAction",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "saveDisabled",
          "type": "Boolean",
          "published": true,
          "default": true
        },
        {
          "name": "selectedDetailsTabId",
          "type": "String",
          "published": true,
          "observer": "selectedDetailsTabIdChanged",
          "observerNode": {
            "type": "Literal",
            "start": 678,
            "end": 707,
            "loc": {
              "start": {
                "line": 41,
                "column": 15
              },
              "end": {
                "line": 41,
                "column": 44
              }
            },
            "range": [
              678,
              707
            ],
            "value": "selectedDetailsTabIdChanged",
            "raw": "\"selectedDetailsTabIdChanged\""
          }
        },
        {
          "name": "selectedDetailsTabIdChanged",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "setFormSpec",
          "type": "Function",
          "params": [
            {
              "name": "namespace"
            },
            {
              "name": "entity"
            }
          ],
          "function": true
        },
        {
          "name": "storeData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "TranslationsBehavior",
          "name": "tr",
          "type": "Function",
          "params": [
            {
              "name": "m"
            }
          ],
          "function": true
        },
        {
          "name": "whenElementsReady",
          "type": "Function",
          "params": [
            {
              "name": "done"
            }
          ],
          "function": true
        },
        {
          "name": "withPanel",
          "type": "Object",
          "published": true,
          "default": true
        },
        {
          "name": "_addAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_enterPressed",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_maskedEval",
          "type": "Function",
          "params": [
            {
              "name": "scr"
            },
            {
              "name": "env"
            },
            {
              "name": "def"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_storeData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_storeDataCustom",
          "type": "Function",
          "params": [
            {
              "name": "data"
            },
            {
              "name": "customService"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        },
        {
          "__fromBehavior": "TranslationsBehavior",
          "name": "created",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "Polymer.IronA11yKeysBehavior",
        "TranslationsBehavior"
      ],
      "observers": [],
      "is": "simpl-crud",
      "contentHref": "src/simpl-crud/simpl-crud.html",
      "jsdoc": {
        "description": "\nCRUD operations for simpl4\n",
        "tags": [],
        "orig": "\nCRUD operations for simpl4\n"
      },
      "demos": [],
      "show": false
    },
    {
      "type": "element",
      "desc": "\n/**\nThis file is part of SIMPL4(http://simpl4.org).\n\n  Copyright [2014] [Manfred Sattler] <manfred@ms123.org>\n\nSIMPL4 is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nSIMPL4 is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with SIMPL4.  If not, see <http://www.gnu.org/licenses/>.\n/\n",
      "events": [],
      "properties": [
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "convertSheetsToStyles",
          "type": "Function",
          "params": [
            {
              "name": "root"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "createStyleElement",
          "type": "Function",
          "params": [
            {
              "name": "cssText"
            },
            {
              "name": "scope"
            }
          ],
          "function": true
        },
        {
          "name": "getProperties",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "hrefForSheet",
          "type": "Function",
          "params": [
            {
              "name": "sheet"
            },
            {
              "name": "baseUrl"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "importRuleForSheet",
          "type": "Function",
          "params": [
            {
              "name": "sheet"
            },
            {
              "name": "baseUrl"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "importSheet",
          "type": "Function",
          "params": [
            {
              "name": "href"
            }
          ],
          "function": true
        },
        {
          "name": "namespace",
          "type": "String",
          "published": true,
          "default": "xxx"
        },
        {
          "name": "namespaceChanged",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "_insert",
          "type": "Function",
          "params": [
            {
              "name": "str"
            },
            {
              "name": "index"
            },
            {
              "name": "ins"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "_onCssResponse",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "_visitCssNode",
          "type": "Function",
          "params": [
            {
              "name": "node"
            },
            {
              "name": "scope"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "_visitCssRule",
          "type": "Function",
          "params": [
            {
              "name": "node"
            },
            {
              "name": "scope"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "_visitCssRules",
          "type": "Function",
          "params": [
            {
              "name": "items"
            },
            {
              "name": "fn"
            },
            {
              "name": "scope"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "ready",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "CSSImportBehavior"
      ],
      "observers": [],
      "is": "simpl-globals",
      "contentHref": "src/simpl-globals/simpl-globals.html",
      "jsdoc": {
        "description": "\n/**\nThis file is part of SIMPL4(http://simpl4.org).\n\n  Copyright [2014] [Manfred Sattler] <manfred@ms123.org>\n\nSIMPL4 is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nSIMPL4 is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with SIMPL4.  If not, see <http://www.gnu.org/licenses/>.\n/\n",
        "tags": [],
        "orig": "\n/**\n * This file is part of SIMPL4(http://simpl4.org).\n *\n *   Copyright [2014] [Manfred Sattler] <manfred@ms123.org>\n *\n * SIMPL4 is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * SIMPL4 is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with SIMPL4.  If not, see <http://www.gnu.org/licenses/>.\n */\n"
      },
      "demos": [],
      "show": false
    },
    {
      "type": "behavior",
      "desc": "",
      "events": [],
      "jsdoc": {
        "description": "",
        "tags": [
          {
            "tag": "polymerBehavior",
            "type": null,
            "name": "FormElementSelectorBehavior",
            "description": null
          }
        ],
        "orig": "* @polymerBehavior FormElementSelectorBehavior "
      },
      "demos": [],
      "symbol": "FormElementSelectorBehavior",
      "is": "FormElementSelectorBehavior",
      "properties": [
        {
          "name": "isActionButton",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isAlert",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isCustom",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isEnumSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isField",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isForm",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isGridInput",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isGroup",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isInputAndBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "name": "isInputAndNotBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "name": "isModuleSelector",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isPage",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isRelatedTo",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isRow",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isTableSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isTabView",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isTextArea",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "isUpload",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "tabTitle",
          "type": "Function",
          "params": [
            {
              "name": "t"
            }
          ],
          "function": true
        }
      ],
      "observers": [],
      "contentHref": "src/simpl-form/simpl-form.html",
      "show": false
    },
    {
      "type": "behavior",
      "desc": "",
      "events": [],
      "jsdoc": {
        "description": "",
        "tags": [
          {
            "tag": "polymerBehavior",
            "type": null,
            "name": "FormBehavior",
            "description": null
          }
        ],
        "orig": "* @polymerBehavior FormBehavior "
      },
      "demos": [],
      "symbol": "FormBehavior",
      "is": "FormBehavior",
      "properties": [
        {
          "name": "clearData",
          "type": "Function",
          "desc": "\nclear the form data \n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\nclear the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * clear the form data \n\t\t "
          },
          "function": true
        },
        {
          "name": "getData",
          "type": "Function",
          "desc": "\nget the form data \n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\nget the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * get the form data \n\t\t "
          },
          "function": true
        },
        {
          "name": "setData",
          "type": "Function",
          "desc": "\nset the form data \n\t\t ",
          "params": [
            {
              "name": "data"
            }
          ],
          "jsdoc": {
            "description": "\nset the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * set the form data \n\t\t "
          },
          "function": true
        },
        {
          "name": "setItems",
          "type": "Function",
          "desc": "\nnot really  public , should only be used if you know what you are doing\n\t\t ",
          "params": [
            {
              "name": "items"
            }
          ],
          "jsdoc": {
            "description": "\nnot really  public , should only be used if you know what you are doing\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * not really  public , should only be used if you know what you are doing\n\t\t "
          },
          "function": true
        },
        {
          "name": "updateData",
          "type": "Function",
          "desc": "\nupdate the form data \n\t\t ",
          "params": [
            {
              "name": "data"
            }
          ],
          "jsdoc": {
            "description": "\nupdate the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * update the form data \n\t\t "
          },
          "function": true
        },
        {
          "name": "validate",
          "type": "Function",
          "desc": "\nvalidate the form data \n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\nvalidate the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * validate the form data \n\t\t "
          },
          "function": true
        },
        {
          "name": "__dataChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "__formNameChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_buildShapeMap",
          "type": "Function",
          "params": [
            {
              "name": "shape"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_cleanShape",
          "type": "Function",
          "params": [
            {
              "name": "shape"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_constraintParams",
          "type": "Object",
          "private": true
        },
        {
          "name": "_constructRegulaConstraints",
          "type": "Function",
          "params": [
            {
              "name": "constraints"
            },
            {
              "name": "msg"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_convertType",
          "type": "Function",
          "params": [
            {
              "name": "t"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_correctRegex",
          "type": "Function",
          "params": [
            {
              "name": "r"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_dataChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_doParameterMapping",
          "type": "Function",
          "params": [
            {
              "name": "parammapping"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_doPreProcess",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_doResultMapping",
          "type": "Function",
          "params": [
            {
              "name": "items"
            },
            {
              "name": "resultmapping"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_expandString",
          "type": "Function",
          "params": [
            {
              "name": "str"
            },
            {
              "name": "binding"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_filterToArray",
          "type": "Function",
          "params": [
            {
              "name": "nodeList"
            },
            {
              "name": "all"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_formNameChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_getData",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_getField",
          "type": "Function",
          "params": [
            {
              "name": "path"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_getLabel",
          "type": "Function",
          "params": [
            {
              "name": "path"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_getLabelShape",
          "type": "Function",
          "params": [
            {
              "name": "childs"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_getSelectionLists",
          "type": "Function",
          "params": [
            {
              "name": "method"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_isEmpty",
          "type": "Function",
          "params": [
            {
              "name": "s"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_isLineBreak",
          "type": "Function",
          "params": [
            {
              "name": "child"
            },
            {
              "name": "next"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_isNotEmpty",
          "type": "Function",
          "params": [
            {
              "name": "s"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_isSaveDisabled",
          "type": "Function",
          "params": [
            {
              "name": "env"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_mapKeys",
          "type": "Function",
          "params": [
            {
              "name": "key"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_maskedEval",
          "type": "Function",
          "params": [
            {
              "name": "scr"
            },
            {
              "name": "env"
            },
            {
              "name": "def"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_postProcessLocal",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_postProcessService",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_prepareShape",
          "type": "Function",
          "params": [
            {
              "name": "shape"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_preProcessLocal",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_preProcessService",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_removeExtension",
          "type": "Function",
          "params": [
            {
              "name": "s"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_setData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_setFieldData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_setGlobalErrorMessage",
          "type": "Function",
          "params": [
            {
              "name": "msg"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_setItems",
          "type": "Function",
          "params": [
            {
              "name": "items"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_shapesChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_specChanged",
          "type": "Function",
          "desc": "----------------------------------",
          "params": [],
          "jsdoc": {
            "description": "----------------------------------",
            "tags": [],
            "orig": "----------------------------------"
          },
          "private": true,
          "function": true
        },
        {
          "name": "_toMap",
          "type": "Function",
          "params": [
            {
              "name": "arr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_validateLocal",
          "type": "Function",
          "params": [
            {
              "name": "errorListGlobal"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_valueChanged",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_whenFieldsReady",
          "type": "Function",
          "params": [
            {
              "name": "done"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "created",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        },
        {
          "name": "ready",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "observers": [],
      "contentHref": "src/simpl-form/form-behavior.html",
      "show": false
    },
    {
      "type": "behavior",
      "desc": "",
      "events": [
        {
          "desc": "\nfire if the datatables table is complete\n\n",
          "jsdoc": {
            "description": "\nfire if the datatables table is complete\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "init-complete"
              }
            ],
            "orig": "*\n\t\t * fire if the datatables table is complete\n\t\t *\n\t\t * @event init-complete\n\t\t "
          },
          "name": "init-complete",
          "params": []
        },
        {
          "desc": "\nfire if rows are selected\n\n",
          "jsdoc": {
            "description": "\nfire if rows are selected\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "rows-selected"
              }
            ],
            "orig": "*\n\t\t * fire if rows are selected\n\t\t *\n\t\t * @event rows-selected\n\t\t "
          },
          "name": "rows-selected",
          "params": []
        }
      ],
      "jsdoc": {
        "description": "",
        "tags": [
          {
            "tag": "polymerBehavior",
            "type": null,
            "name": "DataTablesBehavior",
            "description": null
          }
        ],
        "orig": "* @polymerBehavior DataTablesBehavior "
      },
      "demos": [],
      "symbol": "DataTablesBehavior",
      "is": "DataTablesBehavior",
      "properties": [
        {
          "name": "data",
          "type": "Object",
          "desc": "\nthe data\n\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nthe data\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * the data\n\t\t\t "
          }
        },
        {
          "name": "getApi",
          "type": "Function",
          "desc": "\n get the datatables api\n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\n get the datatables api\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t *  get the datatables api\n\t\t "
          },
          "function": true
        },
        {
          "name": "getSelection",
          "type": "Function",
          "desc": "\n get the selected rows\n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\n get the selected rows\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t *  get the selected rows\n\t\t "
          },
          "function": true
        },
        {
          "name": "meta",
          "type": "Object",
          "desc": "\ncolumn definition, if null, the column definition is taken from the data <br/>\n\t\t\t\tcan be a also json string <br/>\n\t\t\t\t[ {data:'firstname', title:'@translation.firstname'},  <br/>&nbsp; {data:'surname', title:'@translation.surname'} ]<br/>\n\t\t\t\tif the first char in \"title\" is  \"@\", then title.substring(1) will be translated\n\t\t\t\t\n\t\t\t ",
          "published": true,
          "default": null,
          "jsdoc": {
            "description": "\ncolumn definition, if null, the column definition is taken from the data <br/>\n\t\t\t\tcan be a also json string <br/>\n\t\t\t\t[ {data:'firstname', title:'@translation.firstname'},  <br/>&nbsp; {data:'surname', title:'@translation.surname'} ]<br/>\n\t\t\t\tif the first char in \"title\" is  \"@\", then title.substring(1) will be translated\n\t\t\t\t\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * column definition, if null, the column definition is taken from the data <br/>\n\t\t\t\tcan be a also json string <br/>\n\t\t\t\t[ {data:'firstname', title:'@translation.firstname'},  <br/>&nbsp; {data:'surname', title:'@translation.surname'} ]<br/>\n\t\t\t\tif the first char in \"title\" is  \"@\", then title.substring(1) will be translated\n\t\t\t\t\n\t\t\t "
          }
        },
        {
          "name": "multiSelect",
          "type": "Boolean",
          "desc": "\nmore than one row can be selected\n\t\t\t ",
          "published": true,
          "default": false,
          "jsdoc": {
            "description": "\nmore than one row can be selected\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * more than one row can be selected\n\t\t\t "
          }
        },
        {
          "name": "namespace",
          "type": "String",
          "desc": "\nthe namespace\n\t\t\t ",
          "published": true,
          "default": null,
          "jsdoc": {
            "description": "\nthe namespace\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * the namespace\n\t\t\t "
          }
        },
        {
          "name": "options",
          "type": "String",
          "desc": "\n<b>datatables options</b><br/>\ndom<br/>\nl - length changing input control <br/>\nf - filtering input<br/>\nt - The table!<br/>\ni - Table information summary<br/>\np - pagination control<br/>\nr - processing display element<br/>\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\n<b>datatables options</b><br/>\ndom<br/>\nl - length changing input control <br/>\nf - filtering input<br/>\nt - The table!<br/>\ni - Table information summary<br/>\np - pagination control<br/>\nr - processing display element<br/>\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * <b>datatables options</b><br/>\ndom<br/>\nl - length changing input control <br/>\nf - filtering input<br/>\nt - The table!<br/>\ni - Table information summary<br/>\np - pagination control<br/>\nr - processing display element<br/>\n\t\t\t\t "
          }
        },
        {
          "name": "recalc",
          "type": "Function",
          "desc": "\n recalc and redraw the table\n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\n recalc and redraw the table\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t *  recalc and redraw the table\n\t\t "
          },
          "function": true
        },
        {
          "name": "selection",
          "type": "Array",
          "desc": "\nThe selected rows\n\t\t\t ",
          "published": true,
          "notify": true,
          "jsdoc": {
            "description": "\nThe selected rows\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * The selected rows\n\t\t\t "
          }
        },
        {
          "name": "unselectAll",
          "type": "Function",
          "desc": "\n unselect all rows\n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\n unselect all rows\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t *  unselect all rows\n\t\t "
          },
          "function": true
        },
        {
          "name": "__createTable",
          "type": "Function",
          "params": [
            {
              "name": "dtMeta"
            },
            {
              "name": "dataSet"
            },
            {
              "name": "options"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "__dataChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_addDetailCopier",
          "type": "Function",
          "params": [
            {
              "name": "mainElem"
            },
            {
              "name": "api"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_copySelection",
          "type": "Function",
          "params": [
            {
              "name": "sel"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_createRowListener",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_createTable",
          "type": "Function",
          "params": [
            {
              "name": "dtMeta"
            },
            {
              "name": "dataSet"
            },
            {
              "name": "options"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_dataChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_getIndex",
          "type": "Function",
          "params": [
            {
              "name": "target"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_getLang",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_parseOptions",
          "type": "Function",
          "params": [
            {
              "name": "o"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_prepareMeta",
          "type": "Function",
          "params": [
            {
              "name": "meta"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_prepareMetaFromData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_tapAction",
          "type": "Function",
          "params": [
            {
              "name": "target"
            },
            {
              "name": "index"
            },
            {
              "name": "row"
            },
            {
              "name": "doubleTap"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_tapActionMulti",
          "type": "Function",
          "params": [
            {
              "name": "target"
            },
            {
              "name": "index"
            },
            {
              "name": "row"
            },
            {
              "name": "doubleTap"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_tapActionSingle",
          "type": "Function",
          "params": [
            {
              "name": "target"
            },
            {
              "name": "index"
            },
            {
              "name": "row"
            },
            {
              "name": "doubleTap"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_translate",
          "type": "Function",
          "params": [
            {
              "name": "meta"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_whenTableReady",
          "type": "Function",
          "params": [
            {
              "name": "done"
            }
          ],
          "private": true,
          "function": true
        }
      ],
      "observers": [
        {
          "javascriptNode": {
            "type": "Literal",
            "start": 1315,
            "end": 1340,
            "loc": {
              "start": {
                "line": 68,
                "column": 3
              },
              "end": {
                "line": 68,
                "column": 28
              }
            },
            "range": [
              1315,
              1340
            ],
            "value": "_dataChanged(data,meta)",
            "raw": "'_dataChanged(data,meta)'"
          },
          "expression": "_dataChanged(data,meta)"
        }
      ],
      "contentHref": "src/simpl-datatables/datatables-behavior.html",
      "show": false
    },
    {
      "type": "behavior",
      "desc": "",
      "events": [],
      "jsdoc": {
        "description": "",
        "tags": [
          {
            "tag": "polymerBehavior",
            "type": null,
            "name": "TranslationsBehavior",
            "description": null
          }
        ],
        "orig": "* @polymerBehavior TranslationsBehavior "
      },
      "demos": [],
      "symbol": "TranslationsBehavior",
      "is": "TranslationsBehavior",
      "properties": [
        {
          "name": "tr",
          "type": "Function",
          "params": [
            {
              "name": "m"
            }
          ],
          "function": true
        },
        {
          "name": "created",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "observers": [],
      "contentHref": "src/simpl-globals/simpl-globals.html",
      "show": false
    },
    {
      "type": "behavior",
      "desc": "",
      "events": [],
      "jsdoc": {
        "description": "",
        "tags": [
          {
            "tag": "polymerBehavior",
            "type": null,
            "name": "WhitespaceBehavior",
            "description": null
          }
        ],
        "orig": "* @polymerBehavior WhitespaceBehavior "
      },
      "demos": [],
      "symbol": "WhitespaceBehavior",
      "is": "WhitespaceBehavior",
      "properties": [
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "observers": [],
      "contentHref": "src/simpl-globals/simpl-globals.html",
      "show": false
    },
    {
      "type": "behavior",
      "desc": "",
      "events": [],
      "jsdoc": {
        "description": "",
        "tags": [
          {
            "tag": "polymerBehavior",
            "type": null,
            "name": "ModernizrBehavior",
            "description": null
          }
        ],
        "orig": "* @polymerBehavior ModernizrBehavior "
      },
      "demos": [],
      "symbol": "ModernizrBehavior",
      "is": "ModernizrBehavior",
      "properties": [
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "observers": [],
      "contentHref": "src/simpl-globals/simpl-globals.html",
      "show": false
    },
    {
      "type": "behavior",
      "desc": "",
      "events": [],
      "jsdoc": {
        "description": "",
        "tags": [
          {
            "tag": "polymerBehavior",
            "type": null,
            "name": "StyleScopeBehavior",
            "description": null
          }
        ],
        "orig": "* @polymerBehavior StyleScopeBehavior "
      },
      "demos": [],
      "symbol": "StyleScopeBehavior",
      "is": "StyleScopeBehavior",
      "properties": [
        {
          "name": "setStyleScope",
          "type": "Function",
          "params": [
            {
              "name": "main_el"
            }
          ],
          "function": true
        },
        {
          "name": "_domVisitor",
          "type": "Function",
          "params": [
            {
              "name": "el"
            },
            {
              "name": "f"
            }
          ],
          "private": true,
          "function": true
        }
      ],
      "observers": [],
      "contentHref": "src/simpl-globals/simpl-globals.html",
      "show": false
    },
    {
      "type": "behavior",
      "desc": "",
      "events": [],
      "jsdoc": {
        "description": "",
        "tags": [
          {
            "tag": "polymerBehavior",
            "type": null,
            "name": "CSSImportBehavior",
            "description": null
          }
        ],
        "orig": "* @polymerBehavior CSSImportBehavior "
      },
      "demos": [],
      "symbol": "CSSImportBehavior",
      "is": "CSSImportBehavior",
      "properties": [
        {
          "name": "convertSheetsToStyles",
          "type": "Function",
          "params": [
            {
              "name": "root"
            }
          ],
          "function": true
        },
        {
          "name": "createStyleElement",
          "type": "Function",
          "params": [
            {
              "name": "cssText"
            },
            {
              "name": "scope"
            }
          ],
          "function": true
        },
        {
          "name": "hrefForSheet",
          "type": "Function",
          "params": [
            {
              "name": "sheet"
            },
            {
              "name": "baseUrl"
            }
          ],
          "function": true
        },
        {
          "name": "importRuleForSheet",
          "type": "Function",
          "params": [
            {
              "name": "sheet"
            },
            {
              "name": "baseUrl"
            }
          ],
          "function": true
        },
        {
          "name": "importSheet",
          "type": "Function",
          "params": [
            {
              "name": "href"
            }
          ],
          "function": true
        },
        {
          "name": "_insert",
          "type": "Function",
          "params": [
            {
              "name": "str"
            },
            {
              "name": "index"
            },
            {
              "name": "ins"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_onCssResponse",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_visitCssNode",
          "type": "Function",
          "params": [
            {
              "name": "node"
            },
            {
              "name": "scope"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_visitCssRule",
          "type": "Function",
          "params": [
            {
              "name": "node"
            },
            {
              "name": "scope"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_visitCssRules",
          "type": "Function",
          "params": [
            {
              "name": "items"
            },
            {
              "name": "fn"
            },
            {
              "name": "scope"
            }
          ],
          "private": true,
          "function": true
        }
      ],
      "observers": [],
      "contentHref": "src/simpl-main/css-import-behavior.html",
      "show": false
    }
  ],
  "elementsByTagName": {
    "simpl-websocket": {
      "type": "element",
      "desc": "\nConnects to a simpl4 service, with a websocket start endpoint\n\n    <simpl-websocket id=\"websocket\" namespace=\"docu\" websocket-name=\"ws1\" connected=\"{{connected}}\" \n          recv-message=\"{{recvMessage}}\"> </simpl-websocket>\n\n    attached: function() {\n      var params = { connectionKey: getShortId() };\n      this.$.websocket.openConnection( params, this.socketTimeoutCallback.bind( this ) );\n\n      ...\n\n      this.$.websocket.closeConnection();\n    },\n\n    connectedChanged: function(e) {\n      if( this.connected){\n        this.$.websocket.sendMessage({msg: \"Hello from simpl-websocket\"});\n      }\n    },\n\n    recvMessageChanged: function(e) {\n    },\n\n    socketTimeoutCallback: function( e ) {\n    }\n\n",
      "events": [],
      "properties": [
        {
          "name": "closeConnection",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "connected",
          "type": "Boolean",
          "desc": "\nthe websocket is connected\n\t\t\t\t\t ",
          "published": true,
          "default": false,
          "notify": true,
          "jsdoc": {
            "description": "\nthe websocket is connected\n\t\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t\t * the websocket is connected\n\t\t\t\t\t "
          }
        },
        {
          "name": "namespace",
          "type": "String",
          "published": true
        },
        {
          "name": "openConnection",
          "type": "Function",
          "desc": "\nparams: { connectionKey : 'KEY' }\n\nthe connectionKey can here overriden, otherwise a default key is generated\n\ntimeoutCallback : function is called , if a timeout occurs\n\t\t\t\t ",
          "params": [
            {
              "name": "params"
            },
            {
              "name": "timeoutCallback"
            }
          ],
          "jsdoc": {
            "description": "\nparams: { connectionKey : 'KEY' }\n\nthe connectionKey can here overriden, otherwise a default key is generated\n\ntimeoutCallback : function is called , if a timeout occurs\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * params: { connectionKey : 'KEY' }\n\n\t\t\t\t * the connectionKey can here overriden, otherwise a default key is generated\n\n\t\t\t\t * timeoutCallback : function is called , if a timeout occurs\n\t\t\t\t "
          },
          "function": true
        },
        {
          "name": "osgiService",
          "type": "String",
          "desc": "\nis for future  use\n\t\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nis for future  use\n\t\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t\t * is for future  use\n\t\t\t\t\t "
          }
        },
        {
          "name": "recvMessage",
          "type": "Object",
          "desc": "\ncontains the received message, a json object\n\t\t\t\t\t ",
          "published": true,
          "notify": true,
          "jsdoc": {
            "description": "\ncontains the received message, a json object\n\t\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t\t * contains the received message, a json object\n\t\t\t\t\t "
          }
        },
        {
          "name": "sendMessage",
          "type": "Function",
          "desc": "\nsend a message, data is a json object\n\t\t\t\t ",
          "params": [
            {
              "name": "data"
            }
          ],
          "jsdoc": {
            "description": "\nsend a message, data is a json object\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * send a message, data is a json object\n\t\t\t\t "
          },
          "function": true
        },
        {
          "name": "websocketName",
          "type": "String",
          "desc": "\nthe websocketName is specified in the service definition\n\t\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nthe websocketName is specified in the service definition\n\t\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t\t * the websocketName is specified in the service definition\n\t\t\t\t\t "
          }
        }
      ],
      "behaviors": [],
      "observers": [],
      "is": "simpl-websocket",
      "contentHref": "src/simpl-websocket/simpl-websocket.html",
      "jsdoc": {
        "description": "\nConnects to a simpl4 service, with a websocket start endpoint\n\n    <simpl-websocket id=\"websocket\" namespace=\"docu\" websocket-name=\"ws1\" connected=\"{{connected}}\" \n          recv-message=\"{{recvMessage}}\"> </simpl-websocket>\n\n    attached: function() {\n      var params = { connectionKey: getShortId() };\n      this.$.websocket.openConnection( params, this.socketTimeoutCallback.bind( this ) );\n\n      ...\n\n      this.$.websocket.closeConnection();\n    },\n\n    connectedChanged: function(e) {\n      if( this.connected){\n        this.$.websocket.sendMessage({msg: \"Hello from simpl-websocket\"});\n      }\n    },\n\n    recvMessageChanged: function(e) {\n    },\n\n    socketTimeoutCallback: function( e ) {\n    }\n\n",
        "tags": [],
        "orig": "\nConnects to a simpl4 service, with a websocket start endpoint\n\n    <simpl-websocket id=\"websocket\" namespace=\"docu\" websocket-name=\"ws1\" connected=\"{{connected}}\" \n          recv-message=\"{{recvMessage}}\"> </simpl-websocket>\n\n    attached: function() {\n      var params = { connectionKey: getShortId() };\n      this.$.websocket.openConnection( params, this.socketTimeoutCallback.bind( this ) );\n\n      ...\n\n      this.$.websocket.closeConnection();\n    },\n\n    connectedChanged: function(e) {\n      if( this.connected){\n        this.$.websocket.sendMessage({msg: \"Hello from simpl-websocket\"});\n      }\n    },\n\n    recvMessageChanged: function(e) {\n    },\n\n    socketTimeoutCallback: function( e ) {\n    }\n\n"
      },
      "demos": [],
      "show": true
    },
    "simpl-rpc": {
      "type": "element",
      "desc": "\nsimple possiblity to invoke any service\n\n    <simpl-rpc method=\"docu.getFriends\" service=\"simpl4\" params=\"{}\" \n        response=\"{{friends}}\"></simpl-rpc> \n\n     <table>\n        <template is=\"dom-repeat\"  items=\"[[friends]]\">\n          <tr>\n            <td>[[item.surname]]</td>\n            <td>[[item.firstname]]</td>\n            <td>[[item.gender]]</td>\n            <td>[[item.phone]]</td>\n          </tr>\n        </template>\n      </table>\n\n",
      "events": [
        {
          "desc": "\nFired if the call complete\n\n",
          "jsdoc": {
            "description": "\nFired if the call complete\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "complete"
              }
            ],
            "orig": "*\n\t\t\t * Fired if the call complete\n\t\t\t *\n\t\t\t * @event complete\n\t\t\t "
          },
          "name": "complete",
          "params": []
        },
        {
          "desc": "\nFired if an error occured\n\n",
          "jsdoc": {
            "description": "\nFired if an error occured\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "error"
              }
            ],
            "orig": "*\n\t\t\t * Fired if an error occured\n\t\t\t *\n\t\t\t * @event error\n\t\t\t "
          },
          "name": "error",
          "params": []
        }
      ],
      "properties": [
        {
          "name": "go",
          "type": "Function",
          "desc": "\nManual execute the rpc call.\n\t\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\nManual execute the rpc call.\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * Manual execute the rpc call.\n\t\t\t "
          },
          "function": true
        },
        {
          "name": "method",
          "type": "String",
          "desc": "\nThe methodname  defined in the service editor\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nThe methodname  defined in the service editor\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * The methodname  defined in the service editor\n\t\t\t\t "
          }
        },
        {
          "name": "noauto",
          "type": "Boolean",
          "desc": "\nexecute not automatically\n\t\t\t\t ",
          "published": true,
          "default": false,
          "jsdoc": {
            "description": "\nexecute not automatically\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * execute not automatically\n\t\t\t\t "
          }
        },
        {
          "name": "params",
          "type": "Object",
          "desc": "\nThe service parameter Object, can be expressed as JSON.\n\t\t\t\t ",
          "published": true,
          "default": null,
          "jsdoc": {
            "description": "\nThe service parameter Object, can be expressed as JSON.\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * The service parameter Object, can be expressed as JSON.\n\t\t\t\t "
          }
        },
        {
          "name": "response",
          "type": "Object",
          "desc": "\nThe response object\n\t\t\t\t ",
          "published": true,
          "notify": true,
          "jsdoc": {
            "description": "\nThe response object\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * The response object\n\t\t\t\t "
          }
        },
        {
          "name": "service",
          "type": "String",
          "desc": "\nsimpl4 is almost ok.\n\t\t\t\t ",
          "published": true,
          "default": "simpl4",
          "jsdoc": {
            "description": "\nsimpl4 is almost ok.\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * simpl4 is almost ok.\n\t\t\t\t "
          }
        },
        {
          "name": "_allparams",
          "type": "Object",
          "published": true,
          "private": true
        },
        {
          "name": "_collectAll",
          "type": "Function",
          "desc": "\nFired if the call complete\n\n",
          "params": [],
          "jsdoc": {
            "description": "\nFired if the call complete\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "complete"
              }
            ],
            "orig": "*\n\t\t\t * Fired if the call complete\n\t\t\t *\n\t\t\t * @event complete\n\t\t\t "
          },
          "private": true,
          "function": true
        },
        {
          "name": "_complete",
          "type": "Function",
          "params": [
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_error",
          "type": "Function",
          "params": [
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_error2",
          "type": "Function",
          "params": [
            {
              "name": "error"
            },
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_evalResponse",
          "type": "Function",
          "params": [
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_getId",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_isSuccess",
          "type": "Function",
          "params": [
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_processResponse",
          "type": "Function",
          "params": [
            {
              "name": "result"
            },
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_receive",
          "type": "Function",
          "params": [
            {
              "name": "response"
            },
            {
              "name": "xhr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "ready",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [],
      "observers": [],
      "is": "simpl-rpc",
      "contentHref": "src/simpl-rpc/simpl-rpc.html",
      "jsdoc": {
        "description": "\nsimple possiblity to invoke any service\n\n    <simpl-rpc method=\"docu.getFriends\" service=\"simpl4\" params=\"{}\" \n        response=\"{{friends}}\"></simpl-rpc> \n\n     <table>\n        <template is=\"dom-repeat\"  items=\"[[friends]]\">\n          <tr>\n            <td>[[item.surname]]</td>\n            <td>[[item.firstname]]</td>\n            <td>[[item.gender]]</td>\n            <td>[[item.phone]]</td>\n          </tr>\n        </template>\n      </table>\n\n",
        "tags": [],
        "orig": "\nsimple possiblity to invoke any service\n\n    <simpl-rpc method=\"docu.getFriends\" service=\"simpl4\" params=\"{}\" \n        response=\"{{friends}}\"></simpl-rpc> \n\n     <table>\n        <template is=\"dom-repeat\"  items=\"[[friends]]\">\n          <tr>\n            <td>[[item.surname]]</td>\n            <td>[[item.firstname]]</td>\n            <td>[[item.gender]]</td>\n            <td>[[item.phone]]</td>\n          </tr>\n        </template>\n      </table>\n\n"
      },
      "demos": [],
      "show": true
    },
    "xaction-button": {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [
        {
          "name": "xaction",
          "type": "String",
          "published": true
        },
        {
          "name": "xid",
          "type": "String",
          "published": true
        }
      ],
      "behaviors": [
        "Polymer.PaperButtonBehavior"
      ],
      "observers": [],
      "is": "xaction-button",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    "simpl-group": {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [],
      "behaviors": [],
      "observers": [],
      "is": "simpl-group",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    "simpl-row": {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [],
      "behaviors": [],
      "observers": [],
      "is": "simpl-row",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    "grid-element-renderer": {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [
        {
          "name": "getGridField",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "getValue",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isActionButton",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isAlert",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isCustom",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isEnumSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isField",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isForm",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGridInput",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGroup",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndNotBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isModuleSelector",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isPage",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRelatedTo",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRow",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTableSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTabView",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTextArea",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isUpload",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "item",
          "type": "Object",
          "published": true,
          "observer": "itemChanged",
          "observerNode": {
            "type": "Literal",
            "start": 90,
            "end": 103,
            "loc": {
              "start": {
                "line": 6,
                "column": 15
              },
              "end": {
                "line": 6,
                "column": 28
              }
            },
            "range": [
              90,
              103
            ],
            "value": "itemChanged",
            "raw": "\"itemChanged\""
          }
        },
        {
          "name": "itemChanged",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "setValue",
          "type": "Function",
          "params": [
            {
              "name": "v"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "tabTitle",
          "type": "Function",
          "params": [
            {
              "name": "t"
            }
          ],
          "function": true
        },
        {
          "name": "_getGridField",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "FormElementSelectorBehavior"
      ],
      "observers": [],
      "is": "grid-element-renderer",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    "form-element-renderer": {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [
        {
          "name": "getActionButtonClasses",
          "type": "Function",
          "params": [
            {
              "name": "action"
            }
          ],
          "function": true
        },
        {
          "name": "getActionButtonColor",
          "type": "Function",
          "params": [
            {
              "name": "action"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isActionButton",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isAlert",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isCustom",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isEnumSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isField",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isForm",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGridInput",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGroup",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndNotBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isModuleSelector",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isPage",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRelatedTo",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRow",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTableSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTabView",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTextArea",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isUpload",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "item",
          "type": "Object",
          "published": true,
          "observer": "itemChanged",
          "observerNode": {
            "type": "Literal",
            "start": 90,
            "end": 103,
            "loc": {
              "start": {
                "line": 6,
                "column": 15
              },
              "end": {
                "line": 6,
                "column": 28
              }
            },
            "range": [
              90,
              103
            ],
            "value": "itemChanged",
            "raw": "\"itemChanged\""
          }
        },
        {
          "name": "itemChanged",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "tabTitle",
          "type": "Function",
          "params": [
            {
              "name": "t"
            }
          ],
          "function": true
        },
        {
          "name": "_internalXAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "FormElementSelectorBehavior"
      ],
      "observers": [],
      "is": "form-element-renderer",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    "form-tab-renderer": {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [
        {
          "name": "computePagesStyle",
          "type": "Function",
          "params": [
            {
              "name": "item"
            }
          ],
          "function": true
        },
        {
          "name": "getElementStyle",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "getPageStyle",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isActionButton",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isAlert",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isCustom",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isEnumSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isField",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isForm",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGridInput",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGroup",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndNotBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isModuleSelector",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isPage",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRelatedTo",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRow",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTableSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTabView",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTextArea",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isUpload",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "item",
          "type": "Object",
          "published": true
        },
        {
          "name": "pagesStyle",
          "type": "Object",
          "published": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "tabTitle",
          "type": "Function",
          "params": [
            {
              "name": "t"
            }
          ],
          "function": true
        },
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "FormElementSelectorBehavior"
      ],
      "observers": [
        {
          "javascriptNode": {
            "type": "Literal",
            "start": 241,
            "end": 262,
            "loc": {
              "start": {
                "line": 16,
                "column": 4
              },
              "end": {
                "line": 16,
                "column": 25
              }
            },
            "range": [
              241,
              262
            ],
            "value": "routeChanged(route)",
            "raw": "'routeChanged(route)'"
          },
          "expression": "routeChanged(route)"
        }
      ],
      "is": "form-tab-renderer",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    "form-element-selector": {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [],
      "properties": [
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isActionButton",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isAlert",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isCustom",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isEnumSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isField",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isForm",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGridInput",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isGroup",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isInputAndNotBoolean",
          "type": "Function",
          "params": [
            {
              "name": "id"
            },
            {
              "name": "xf_type"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isModuleSelector",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isPage",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRelatedTo",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isRow",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTableSelect",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTabView",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isTextArea",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "isUpload",
          "type": "Function",
          "params": [
            {
              "name": "id"
            }
          ],
          "function": true
        },
        {
          "name": "items",
          "type": "Object",
          "published": true
        },
        {
          "__fromBehavior": "FormElementSelectorBehavior",
          "name": "tabTitle",
          "type": "Function",
          "params": [
            {
              "name": "t"
            }
          ],
          "function": true
        },
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "FormElementSelectorBehavior"
      ],
      "observers": [],
      "is": "form-element-selector",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": false
    },
    "simpl-form": {
      "type": "element",
      "desc": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
      "events": [
        {
          "desc": "\nFired if a button pressed which the configured action\n\n",
          "jsdoc": {
            "description": "\nFired if a button pressed which the configured action\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "xaction"
              }
            ],
            "orig": "*\n\t\t\t * Fired if a button pressed which the configured action\n\t\t\t *\n\t\t\t * @event xaction\n\t\t\t "
          },
          "name": "xaction",
          "params": []
        }
      ],
      "properties": [
        {
          "__fromBehavior": "FormBehavior",
          "name": "clearData",
          "type": "Function",
          "desc": "\nclear the form data \n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\nclear the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * clear the form data \n\t\t "
          },
          "function": true
        },
        {
          "name": "data",
          "type": "Object",
          "desc": "\nthe form data\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nthe form data\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * the form data\n\t\t\t\t "
          }
        },
        {
          "name": "enterAction",
          "type": "String",
          "desc": "\nthe triggered action, if null the action configured in the buttons is used\n\t\t\t\t ",
          "published": true,
          "default": null,
          "jsdoc": {
            "description": "\nthe triggered action, if null the action configured in the buttons is used\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * the triggered action, if null the action configured in the buttons is used\n\t\t\t\t "
          }
        },
        {
          "name": "enterDisabled",
          "type": "Boolean",
          "desc": "\ndisable the enterButton\n\t\t\t\t ",
          "published": true,
          "default": false,
          "jsdoc": {
            "description": "\ndisable the enterButton\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * disable the enterButton\n\t\t\t\t "
          }
        },
        {
          "name": "formName",
          "type": "String",
          "desc": "\nthe form name, or the path to the form file\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nthe form name, or the path to the form file\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * the form name, or the path to the form file\n\t\t\t\t "
          }
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "getData",
          "type": "Function",
          "desc": "\nget the form data \n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\nget the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * get the form data \n\t\t "
          },
          "function": true
        },
        {
          "name": "keyBindings",
          "type": "Object"
        },
        {
          "name": "mode",
          "type": "String",
          "desc": "\ncan be any string, maybe set to \"add\" or \"edit\", is passed  to service calls\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\ncan be any string, maybe set to \"add\" or \"edit\", is passed  to service calls\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * can be any string, maybe set to \"add\" or \"edit\", is passed  to service calls\n\t\t\t\t "
          }
        },
        {
          "name": "namespace",
          "type": "String",
          "desc": "\nthe namespace in which the form lives\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nthe namespace in which the form lives\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * the namespace in which the form lives\n\t\t\t\t "
          }
        },
        {
          "name": "saveDisabled",
          "type": "Boolean",
          "desc": "\nindicates whether saving is allowed,externally you   might do some things\n\t\t\t\t ",
          "published": true,
          "default": false,
          "notify": true,
          "jsdoc": {
            "description": "\nindicates whether saving is allowed,externally you   might do some things\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * indicates whether saving is allowed,externally you   might do some things\n\t\t\t\t "
          }
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "setData",
          "type": "Function",
          "desc": "\nset the form data \n\t\t ",
          "params": [
            {
              "name": "data"
            }
          ],
          "jsdoc": {
            "description": "\nset the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * set the form data \n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "setItems",
          "type": "Function",
          "desc": "\nnot really  public , should only be used if you know what you are doing\n\t\t ",
          "params": [
            {
              "name": "items"
            }
          ],
          "jsdoc": {
            "description": "\nnot really  public , should only be used if you know what you are doing\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * not really  public , should only be used if you know what you are doing\n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "TranslationsBehavior",
          "name": "tr",
          "type": "Function",
          "params": [
            {
              "name": "m"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "updateData",
          "type": "Function",
          "desc": "\nupdate the form data \n\t\t ",
          "params": [
            {
              "name": "data"
            }
          ],
          "jsdoc": {
            "description": "\nupdate the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * update the form data \n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "validate",
          "type": "Function",
          "desc": "\nvalidate the form data \n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\nvalidate the form data \n\t\t ",
            "tags": [],
            "orig": "*\n\t\t * validate the form data \n\t\t "
          },
          "function": true
        },
        {
          "name": "variables",
          "type": "Object",
          "published": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "__dataChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "__formNameChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "__isSaveDisabled",
          "type": "Function",
          "params": [
            {
              "name": "sd"
            },
            {
              "name": "item"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_buildShapeMap",
          "type": "Function",
          "params": [
            {
              "name": "shape"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_cleanShape",
          "type": "Function",
          "params": [
            {
              "name": "shape"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_constraintParams",
          "type": "Object",
          "private": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_constructRegulaConstraints",
          "type": "Function",
          "params": [
            {
              "name": "constraints"
            },
            {
              "name": "msg"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_convertType",
          "type": "Function",
          "params": [
            {
              "name": "t"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_correctRegex",
          "type": "Function",
          "params": [
            {
              "name": "r"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_dataChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_doParameterMapping",
          "type": "Function",
          "params": [
            {
              "name": "parammapping"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_doPreProcess",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_doResultMapping",
          "type": "Function",
          "params": [
            {
              "name": "items"
            },
            {
              "name": "resultmapping"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_enterPressed",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_expandString",
          "type": "Function",
          "params": [
            {
              "name": "str"
            },
            {
              "name": "binding"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_filterToArray",
          "type": "Function",
          "params": [
            {
              "name": "nodeList"
            },
            {
              "name": "all"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_formNameChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_getButtonLabel",
          "type": "Function",
          "params": [
            {
              "name": "l"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_getData",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_getField",
          "type": "Function",
          "params": [
            {
              "name": "path"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_getLabel",
          "type": "Function",
          "params": [
            {
              "name": "path"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_getLabelShape",
          "type": "Function",
          "params": [
            {
              "name": "childs"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_getSelectionLists",
          "type": "Function",
          "params": [
            {
              "name": "method"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_internalXAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_isEmpty",
          "type": "Function",
          "params": [
            {
              "name": "s"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_isLineBreak",
          "type": "Function",
          "params": [
            {
              "name": "child"
            },
            {
              "name": "next"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_isNotEmpty",
          "type": "Function",
          "params": [
            {
              "name": "s"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_isSaveDisabled",
          "type": "Function",
          "params": [
            {
              "name": "env"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_mapKeys",
          "type": "Function",
          "params": [
            {
              "name": "key"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_maskedEval",
          "type": "Function",
          "params": [
            {
              "name": "scr"
            },
            {
              "name": "env"
            },
            {
              "name": "def"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_postProcessLocal",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_postProcessService",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_prepareShape",
          "type": "Function",
          "params": [
            {
              "name": "shape"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_preProcessLocal",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_preProcessService",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_removeExtension",
          "type": "Function",
          "params": [
            {
              "name": "s"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_setData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_setFieldData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_setGlobalErrorMessage",
          "type": "Function",
          "params": [
            {
              "name": "msg"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_setItems",
          "type": "Function",
          "params": [
            {
              "name": "items"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_shapesChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_specChanged",
          "type": "Function",
          "desc": "----------------------------------",
          "params": [],
          "jsdoc": {
            "description": "----------------------------------",
            "tags": [],
            "orig": "----------------------------------"
          },
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_toMap",
          "type": "Function",
          "params": [
            {
              "name": "arr"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_validateLocal",
          "type": "Function",
          "params": [
            {
              "name": "errorListGlobal"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_valueChanged",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "_whenFieldsReady",
          "type": "Function",
          "params": [
            {
              "name": "done"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        },
        {
          "__fromBehavior": "TranslationsBehavior",
          "name": "created",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        },
        {
          "name": "listeners",
          "type": "Object",
          "private": true,
          "configuration": true
        },
        {
          "__fromBehavior": "FormBehavior",
          "name": "ready",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "Polymer.IronA11yKeysBehavior",
        "FormBehavior",
        "TranslationsBehavior"
      ],
      "observers": [
        {
          "javascriptNode": {
            "type": "Literal",
            "start": 1194,
            "end": 1216,
            "loc": {
              "start": {
                "line": 66,
                "column": 4
              },
              "end": {
                "line": 66,
                "column": 26
              }
            },
            "range": [
              1194,
              1216
            ],
            "value": "_dataChanged(data.*)",
            "raw": "'_dataChanged(data.*)'"
          },
          "expression": "_dataChanged(data.*)"
        },
        {
          "javascriptNode": {
            "type": "Literal",
            "start": 1222,
            "end": 1244,
            "loc": {
              "start": {
                "line": 67,
                "column": 4
              },
              "end": {
                "line": 67,
                "column": 26
              }
            },
            "range": [
              1222,
              1244
            ],
            "value": "_specChanged(spec.*)",
            "raw": "'_specChanged(spec.*)'"
          },
          "expression": "_specChanged(spec.*)"
        },
        {
          "javascriptNode": {
            "type": "Literal",
            "start": 1250,
            "end": 1278,
            "loc": {
              "start": {
                "line": 68,
                "column": 4
              },
              "end": {
                "line": 68,
                "column": 32
              }
            },
            "range": [
              1250,
              1278
            ],
            "value": "_formNameChanged(formName)",
            "raw": "'_formNameChanged(formName)'"
          },
          "expression": "_formNameChanged(formName)"
        }
      ],
      "is": "simpl-form",
      "contentHref": "src/simpl-form/simpl-form.html",
      "jsdoc": {
        "description": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n",
        "tags": [],
        "orig": "\nform element with validation, the form specification is created in the simpl4 form-editor<br/>\nHint:if an external variable 'uuid' exists, then she is passed to service calls\n\n     <simpl-form id=\"editformId\" namespace=\"docu\" on-xaction=\"formAction\" form-name=\"examples/data/edit.form\"></simpl-form>\n        .\n        .\n        formAction: function( e ) {\n          var d = e.detail;\n          if ( d.xaction == \"reset\" ) {\n          }\n        }\n"
      },
      "demos": [],
      "show": true
    },
    "simpl-datatables": {
      "type": "element",
      "desc": "\nsimple possiblity to invoke any service\n\n     <simpl-rpc id=\"rpcListId\" method=\"docu.dataaccess\" params=\"{operation:'list'}\" response=\"{{dataList}}\"></simpl-rpc>\n     <simpl-datatables options='{paging: true,\"dom\":\"frt\",scrollY:\"200px\"}' \n            on-rows-selected=\"tableRowSelected\" data=\"[[dataList]]\" />\n\n",
      "events": [
        {
          "__fromBehavior": "DataTablesBehavior",
          "desc": "\nfire if the datatables table is complete\n\n",
          "jsdoc": {
            "description": "\nfire if the datatables table is complete\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "init-complete"
              }
            ],
            "orig": "*\n\t\t * fire if the datatables table is complete\n\t\t *\n\t\t * @event init-complete\n\t\t "
          },
          "name": "init-complete",
          "params": []
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "desc": "\nfire if rows are selected\n\n",
          "jsdoc": {
            "description": "\nfire if rows are selected\n\n",
            "tags": [
              {
                "tag": "event",
                "type": null,
                "description": "rows-selected"
              }
            ],
            "orig": "*\n\t\t * fire if rows are selected\n\t\t *\n\t\t * @event rows-selected\n\t\t "
          },
          "name": "rows-selected",
          "params": []
        }
      ],
      "properties": [
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "data",
          "type": "Object",
          "desc": "\nthe data\n\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\nthe data\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * the data\n\t\t\t "
          }
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "getApi",
          "type": "Function",
          "desc": "\n get the datatables api\n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\n get the datatables api\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t *  get the datatables api\n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "getSelection",
          "type": "Function",
          "desc": "\n get the selected rows\n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\n get the selected rows\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t *  get the selected rows\n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "meta",
          "type": "Object",
          "desc": "\ncolumn definition, if null, the column definition is taken from the data <br/>\n\t\t\t\tcan be a also json string <br/>\n\t\t\t\t[ {data:'firstname', title:'@translation.firstname'},  <br/>&nbsp; {data:'surname', title:'@translation.surname'} ]<br/>\n\t\t\t\tif the first char in \"title\" is  \"@\", then title.substring(1) will be translated\n\t\t\t\t\n\t\t\t ",
          "published": true,
          "default": null,
          "jsdoc": {
            "description": "\ncolumn definition, if null, the column definition is taken from the data <br/>\n\t\t\t\tcan be a also json string <br/>\n\t\t\t\t[ {data:'firstname', title:'@translation.firstname'},  <br/>&nbsp; {data:'surname', title:'@translation.surname'} ]<br/>\n\t\t\t\tif the first char in \"title\" is  \"@\", then title.substring(1) will be translated\n\t\t\t\t\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * column definition, if null, the column definition is taken from the data <br/>\n\t\t\t\tcan be a also json string <br/>\n\t\t\t\t[ {data:'firstname', title:'@translation.firstname'},  <br/>&nbsp; {data:'surname', title:'@translation.surname'} ]<br/>\n\t\t\t\tif the first char in \"title\" is  \"@\", then title.substring(1) will be translated\n\t\t\t\t\n\t\t\t "
          }
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "multiSelect",
          "type": "Boolean",
          "desc": "\nmore than one row can be selected\n\t\t\t ",
          "published": true,
          "default": false,
          "jsdoc": {
            "description": "\nmore than one row can be selected\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * more than one row can be selected\n\t\t\t "
          }
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "namespace",
          "type": "String",
          "desc": "\nthe namespace\n\t\t\t ",
          "published": true,
          "default": null,
          "jsdoc": {
            "description": "\nthe namespace\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * the namespace\n\t\t\t "
          }
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "options",
          "type": "String",
          "desc": "\n<b>datatables options</b><br/>\ndom<br/>\nl - length changing input control <br/>\nf - filtering input<br/>\nt - The table!<br/>\ni - Table information summary<br/>\np - pagination control<br/>\nr - processing display element<br/>\n\t\t\t\t ",
          "published": true,
          "jsdoc": {
            "description": "\n<b>datatables options</b><br/>\ndom<br/>\nl - length changing input control <br/>\nf - filtering input<br/>\nt - The table!<br/>\ni - Table information summary<br/>\np - pagination control<br/>\nr - processing display element<br/>\n\t\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t\t * <b>datatables options</b><br/>\ndom<br/>\nl - length changing input control <br/>\nf - filtering input<br/>\nt - The table!<br/>\ni - Table information summary<br/>\np - pagination control<br/>\nr - processing display element<br/>\n\t\t\t\t "
          }
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "recalc",
          "type": "Function",
          "desc": "\n recalc and redraw the table\n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\n recalc and redraw the table\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t *  recalc and redraw the table\n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "selection",
          "type": "Array",
          "desc": "\nThe selected rows\n\t\t\t ",
          "published": true,
          "notify": true,
          "jsdoc": {
            "description": "\nThe selected rows\n\t\t\t ",
            "tags": [],
            "orig": "*\n\t\t\t * The selected rows\n\t\t\t "
          }
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "unselectAll",
          "type": "Function",
          "desc": "\n unselect all rows\n\t\t ",
          "params": [],
          "jsdoc": {
            "description": "\n unselect all rows\n\t\t ",
            "tags": [],
            "orig": "*\n\t\t *  unselect all rows\n\t\t "
          },
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "__createTable",
          "type": "Function",
          "params": [
            {
              "name": "dtMeta"
            },
            {
              "name": "dataSet"
            },
            {
              "name": "options"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "__dataChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_addDetailCopier",
          "type": "Function",
          "params": [
            {
              "name": "mainElem"
            },
            {
              "name": "api"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_copySelection",
          "type": "Function",
          "params": [
            {
              "name": "sel"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_createRowListener",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_createTable",
          "type": "Function",
          "params": [
            {
              "name": "dtMeta"
            },
            {
              "name": "dataSet"
            },
            {
              "name": "options"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_dataChanged",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_getIndex",
          "type": "Function",
          "params": [
            {
              "name": "target"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_getLang",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_parseOptions",
          "type": "Function",
          "params": [
            {
              "name": "o"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_prepareMeta",
          "type": "Function",
          "params": [
            {
              "name": "meta"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_prepareMetaFromData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_tapAction",
          "type": "Function",
          "params": [
            {
              "name": "target"
            },
            {
              "name": "index"
            },
            {
              "name": "row"
            },
            {
              "name": "doubleTap"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_tapActionMulti",
          "type": "Function",
          "params": [
            {
              "name": "target"
            },
            {
              "name": "index"
            },
            {
              "name": "row"
            },
            {
              "name": "doubleTap"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_tapActionSingle",
          "type": "Function",
          "params": [
            {
              "name": "target"
            },
            {
              "name": "index"
            },
            {
              "name": "row"
            },
            {
              "name": "doubleTap"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_translate",
          "type": "Function",
          "params": [
            {
              "name": "meta"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "DataTablesBehavior",
          "name": "_whenTableReady",
          "type": "Function",
          "params": [
            {
              "name": "done"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "ModernizrBehavior",
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "ModernizrBehavior",
        "DataTablesBehavior"
      ],
      "observers": [],
      "is": "simpl-datatables",
      "contentHref": "src/simpl-datatables/simpl-datatables.html",
      "jsdoc": {
        "description": "\nsimple possiblity to invoke any service\n\n     <simpl-rpc id=\"rpcListId\" method=\"docu.dataaccess\" params=\"{operation:'list'}\" response=\"{{dataList}}\"></simpl-rpc>\n     <simpl-datatables options='{paging: true,\"dom\":\"frt\",scrollY:\"200px\"}' \n            on-rows-selected=\"tableRowSelected\" data=\"[[dataList]]\" />\n\n",
        "tags": [],
        "orig": "\nsimple possiblity to invoke any service\n\n     <simpl-rpc id=\"rpcListId\" method=\"docu.dataaccess\" params=\"{operation:'list'}\" response=\"{{dataList}}\"></simpl-rpc>\n     <simpl-datatables options='{paging: true,\"dom\":\"frt\",scrollY:\"200px\"}' \n            on-rows-selected=\"tableRowSelected\" data=\"[[dataList]]\" />\n\n"
      },
      "demos": [],
      "show": true
    },
    "simpl-crud": {
      "type": "element",
      "desc": "\nCRUD operations for simpl4\n",
      "events": [],
      "properties": [
        {
          "name": "addAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "alert",
          "type": "Function",
          "params": [
            {
              "name": "message"
            }
          ],
          "function": true
        },
        {
          "name": "boundKeys",
          "type": "Array",
          "published": true,
          "default": "UNKNOWN"
        },
        {
          "name": "buttonList",
          "type": "String",
          "published": true,
          "default": "add,edit,copy,detail"
        },
        {
          "name": "buttonListDetail",
          "type": "String",
          "published": true,
          "default": "add,edit,copy"
        },
        {
          "name": "cancelAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "copyAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "delAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "deleteData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "function": true
        },
        {
          "name": "detailAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "editAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "entity",
          "type": "String",
          "published": true
        },
        {
          "name": "filterName",
          "type": "String",
          "published": true,
          "default": null
        },
        {
          "name": "getData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "function": true
        },
        {
          "name": "getEditMode",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "getFormData",
          "type": "Function",
          "params": [
            {
              "name": "dataDesc"
            }
          ],
          "function": true
        },
        {
          "name": "getFormSpec",
          "type": "Function",
          "params": [
            {
              "name": "item"
            }
          ],
          "function": true
        },
        {
          "name": "getIdValue",
          "type": "Function",
          "params": [
            {
              "name": "entityName"
            },
            {
              "name": "namespace"
            },
            {
              "name": "data"
            }
          ],
          "function": true
        },
        {
          "name": "getPack",
          "type": "Function",
          "params": [
            {
              "name": "en"
            }
          ],
          "function": true
        },
        {
          "name": "handlePrevNextButtons",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "isForm",
          "type": "Function",
          "params": [
            {
              "name": "item"
            }
          ],
          "function": true
        },
        {
          "name": "isTable",
          "type": "Function",
          "params": [
            {
              "name": "item"
            }
          ],
          "function": true
        },
        {
          "name": "keyBindings",
          "type": "Object"
        },
        {
          "name": "keyEventTarget",
          "type": "Object",
          "published": true,
          "default": "UNKNOWN"
        },
        {
          "name": "loadBeforeEdit",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "namespace",
          "type": "String",
          "published": true
        },
        {
          "name": "nextAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "noCarriageReturn",
          "type": "Boolean",
          "published": true,
          "default": false
        },
        {
          "name": "onDeleteOk",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "onError",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "pageSelected",
          "type": "Number",
          "published": true,
          "default": 0
        },
        {
          "name": "pressed",
          "type": "String",
          "published": true,
          "readOnly": true,
          "default": ""
        },
        {
          "name": "prevAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "preventDefault",
          "type": "Boolean",
          "published": true,
          "default": true,
          "notify": true
        },
        {
          "name": "refreshAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "saveAction",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "name": "saveDisabled",
          "type": "Boolean",
          "published": true,
          "default": true
        },
        {
          "name": "selectedDetailsTabId",
          "type": "String",
          "published": true,
          "observer": "selectedDetailsTabIdChanged",
          "observerNode": {
            "type": "Literal",
            "start": 678,
            "end": 707,
            "loc": {
              "start": {
                "line": 41,
                "column": 15
              },
              "end": {
                "line": 41,
                "column": 44
              }
            },
            "range": [
              678,
              707
            ],
            "value": "selectedDetailsTabIdChanged",
            "raw": "\"selectedDetailsTabIdChanged\""
          }
        },
        {
          "name": "selectedDetailsTabIdChanged",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "function": true
        },
        {
          "name": "setFormSpec",
          "type": "Function",
          "params": [
            {
              "name": "namespace"
            },
            {
              "name": "entity"
            }
          ],
          "function": true
        },
        {
          "name": "storeData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "TranslationsBehavior",
          "name": "tr",
          "type": "Function",
          "params": [
            {
              "name": "m"
            }
          ],
          "function": true
        },
        {
          "name": "whenElementsReady",
          "type": "Function",
          "params": [
            {
              "name": "done"
            }
          ],
          "function": true
        },
        {
          "name": "withPanel",
          "type": "Object",
          "published": true,
          "default": true
        },
        {
          "name": "_addAction",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_enterPressed",
          "type": "Function",
          "params": [],
          "private": true,
          "function": true
        },
        {
          "name": "_maskedEval",
          "type": "Function",
          "params": [
            {
              "name": "scr"
            },
            {
              "name": "env"
            },
            {
              "name": "def"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_storeData",
          "type": "Function",
          "params": [
            {
              "name": "data"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "_storeDataCustom",
          "type": "Function",
          "params": [
            {
              "name": "data"
            },
            {
              "name": "customService"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "attached",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        },
        {
          "__fromBehavior": "TranslationsBehavior",
          "name": "created",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "Polymer.IronA11yKeysBehavior",
        "TranslationsBehavior"
      ],
      "observers": [],
      "is": "simpl-crud",
      "contentHref": "src/simpl-crud/simpl-crud.html",
      "jsdoc": {
        "description": "\nCRUD operations for simpl4\n",
        "tags": [],
        "orig": "\nCRUD operations for simpl4\n"
      },
      "demos": [],
      "show": false
    },
    "simpl-globals": {
      "type": "element",
      "desc": "\n/**\nThis file is part of SIMPL4(http://simpl4.org).\n\n  Copyright [2014] [Manfred Sattler] <manfred@ms123.org>\n\nSIMPL4 is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nSIMPL4 is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with SIMPL4.  If not, see <http://www.gnu.org/licenses/>.\n/\n",
      "events": [],
      "properties": [
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "convertSheetsToStyles",
          "type": "Function",
          "params": [
            {
              "name": "root"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "createStyleElement",
          "type": "Function",
          "params": [
            {
              "name": "cssText"
            },
            {
              "name": "scope"
            }
          ],
          "function": true
        },
        {
          "name": "getProperties",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "hrefForSheet",
          "type": "Function",
          "params": [
            {
              "name": "sheet"
            },
            {
              "name": "baseUrl"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "importRuleForSheet",
          "type": "Function",
          "params": [
            {
              "name": "sheet"
            },
            {
              "name": "baseUrl"
            }
          ],
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "importSheet",
          "type": "Function",
          "params": [
            {
              "name": "href"
            }
          ],
          "function": true
        },
        {
          "name": "namespace",
          "type": "String",
          "published": true,
          "default": "xxx"
        },
        {
          "name": "namespaceChanged",
          "type": "Function",
          "params": [],
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "_insert",
          "type": "Function",
          "params": [
            {
              "name": "str"
            },
            {
              "name": "index"
            },
            {
              "name": "ins"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "_onCssResponse",
          "type": "Function",
          "params": [
            {
              "name": "e"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "_visitCssNode",
          "type": "Function",
          "params": [
            {
              "name": "node"
            },
            {
              "name": "scope"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "_visitCssRule",
          "type": "Function",
          "params": [
            {
              "name": "node"
            },
            {
              "name": "scope"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "__fromBehavior": "CSSImportBehavior",
          "name": "_visitCssRules",
          "type": "Function",
          "params": [
            {
              "name": "items"
            },
            {
              "name": "fn"
            },
            {
              "name": "scope"
            }
          ],
          "private": true,
          "function": true
        },
        {
          "name": "ready",
          "type": "Function",
          "params": [],
          "private": true,
          "configuration": true,
          "function": true
        }
      ],
      "behaviors": [
        "CSSImportBehavior"
      ],
      "observers": [],
      "is": "simpl-globals",
      "contentHref": "src/simpl-globals/simpl-globals.html",
      "jsdoc": {
        "description": "\n/**\nThis file is part of SIMPL4(http://simpl4.org).\n\n  Copyright [2014] [Manfred Sattler] <manfred@ms123.org>\n\nSIMPL4 is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nSIMPL4 is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with SIMPL4.  If not, see <http://www.gnu.org/licenses/>.\n/\n",
        "tags": [],
        "orig": "\n/**\n * This file is part of SIMPL4(http://simpl4.org).\n *\n *   Copyright [2014] [Manfred Sattler] <manfred@ms123.org>\n *\n * SIMPL4 is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * SIMPL4 is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with SIMPL4.  If not, see <http://www.gnu.org/licenses/>.\n */\n"
      },
      "demos": [],
      "show": false
    }
  },
  "behaviors": []
}
